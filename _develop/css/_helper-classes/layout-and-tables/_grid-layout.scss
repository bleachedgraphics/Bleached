// ----------------------------------------------------------------------------
//  Layout - Responsive Grid
// ----------------------------------------------------------------------------

@if $helper-grids--standard == true {

  // A container for each row of our layout.
  // Simply styled with only a base margin-bottom and extending the clearfix
  // class, a row can also have helper classes added onto it for other general
  // styling purposes.
  .row {
    @extend %clearfix;
    margin-bottom: $unit-px5;
    margin-left: -$unit-px5*2;

    // Don't need as wide gutters?  Use this class to cut them in half.
    &.half-gutter {
      margin-left: -$unit-px5;
    }
  }


  // The grid columns within a row.
  // Do not apply styling to this class as its purpose is for layout only.
  .col {
    @extend %last-child-0;
    float: left;
    margin-bottom: 0;
    min-height: 1px;
    padding-left: $unit-px5*2;
    position: relative;
    width: 100%; // default width is 100%

    @media screen and (max-width: $break-medium) {
      margin-bottom: $unit-px5;
    }
  }


  // Adjust .col padding-left to account for half-gutter
  .half-gutter .col {
    padding-left: $unit-px5;
  }


  // Base responsive grid column classes.
  // Do not apply styling to these as their purpose is for width only.

  $width-list: 10, 20, 25, 30, 40, 50, 60, 70, 75, 80, 90, 100;
  $decimal-list: 33, 66;

  // spit out whole number classes
  @each $widths in $width-list {
    .w-#{$widths} {
      width: $widths * 1%;
    }
  }

  // decimal numbers need special maths
  @each $widths in $decimal-list {
    .w-#{$widths} {
      width: $widths * 1.010101%;
    }
  }

  @media screen and (max-width: $break-medium) {
    .w-90, .w-80, .w-75, .w-70, .w-66,
    .w-60, .w-50, .w-40, .w-33, .w-30,
    .w-25, .w-20, .w-10 {
      width: 100%;
    }
  }

} // -- end @if --


// ----------------------------------------------------------------------------
//  Layout - Equal Sized Responsive Grid
//
//  These grids are meant for layout purposes only. If you require styling
//  and spacing to these grids, then you should style the child elements
//  of the grids accordingly
// ----------------------------------------------------------------------------

@if $helper-grids--equal-size == true {

  .equal-grid {
    @extend %clearfix;
    margin-bottom: $unit-px5;

    & > * {
      float: left;
    }
  }

  .equal-grid-4 {
    @include equal-grid-col(25%);

    @media screen and (max-width: $break-normal) {
      @include equal-grid-col(33.33333%);
    }

    @media screen and (max-width: $break-small) {
      @include equal-grid-col(50%);
    }

    @media screen and (max-width: $break-mini) {
      @include equal-grid-col(100%);
    }
  }

  .equal-grid-3 {
    @include equal-grid-col(33.33333%);

    @media screen and (max-width: $break-small) {
      @include equal-grid-col(50%);
    }

    @media screen and (max-width: $break-mini) {
      @include equal-grid-col(100%);
    }
  }

  .equal-grid-2 {
    @include equal-grid-col(50%);

    @media screen and (max-width: $break-mini) {
      @include equal-grid-col(100%);
    }
  }

  // Example mark-up:
  // ----------------------------------------------------------------------------
  // <div class="equal-grid-#">
  //   <div>
  //     content block
  //   </div>
  //   <div>
  //     paragraph
  //   </div>
  //   ...
  //  </div>

} // -- end @if --
